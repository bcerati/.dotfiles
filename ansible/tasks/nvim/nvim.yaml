- name: Install softwares needed for building neovim
  become: true
  apt:
    pkg:
      - ninja-build
      - gettext
      - libtool
      - libtool-bin
      - autoconf
      - automake
      - gcc
      - g++
      - doxygen
      - pkg-config
      - cmake
      - ripgrep
      - vim-airline
      - fonts-powerline
  tags:
    - install
    - nvim

- name: Clone nvim (may take a while)
  become: true
  ansible.builtin.git:
    repo: 'https://github.com/neovim/neovim.git'
    dest: "~/neovim"
    version: release-0.6
  tags:
    - install
    - nvim

- name: Build nvim (may take a while)
  become: true
  shell: "cd ~/neovim && make"
  tags:
    - install
    - nvim

- name: Install nvim
  become: true
  shell: "cd ~/neovim && make install"
  tags:
    - install
    - nvim

- name: nvim Plugin Development 1
  become: true
  apt:
    pkg:
      - luarocks
  tags:
    - install
    - nvim

- name: Install Vim-Plug
  become: true
  shell: curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  tags:
    - install
    - nvim

- name: Install vim Plugins
  become: true
  shell: nvim +PlugInstall +qall +silent
  tags:
    - install
    - nvim

- name: Delete nvim directory
  become: true
  file:
    state: absent
    path: ~/neovim
  tags:
    - install
    - nvim

- name: Installing some npm package
  npm:
    name: n
    global: yes
  loop: ['typescript-language-server', 'typescript', 'intelephense', 'bash-language-server']
  tags:
    - install
    - nodejs

- name: Upgrade pynvim
  shell: python3 -m pip install --user --upgrade pynvim
  tags:
    - install
    - nvim

- name: Activate nvim config files
  file:
    src: ~/bobo_dev/config/nvim
    dest: ~/.config/nvim
    state: link
  tags:
    - install
    - nvim

- name: Installing required npm packages
  npm:
    name: n
    global: yes
  loop: ['typescript-language-server', 'intelephense']
  tags:
    - install
    - nvim

- name: Clone Powerline fonts
  ansible.builtin.git:
    repo: 'https://github.com/powerline/fonts.git'
    dest: "/tmp/powerline"
  tags:
    - install
    - nvim

- name: Execute the Powerline fonts installer
  become: true
  shell: /tmp/powerline/install.sh
  tags:
    - install
    - nvim

- name: Remove the Powerline fonts installer
  file: path=/tmp/powerline state=absent
  tags:
    - install
    - nvim

- name: Ensures font directory exists
  file: path={{ item }} state=directory
  loop: ['~/.local/share/fonts/', '~/.config/fontconfig/conf.d/']
  tags:
    - install
    - nvim

- name: Download fonts
  get_url:
    url: "https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf"
    dest: "~/.local/share/fonts/"
  tags:
    - install
    - nvim

- name: Download font config
  get_url:
    url: "https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf"
    dest: "~/.config/fontconfig/conf.d/"
  tags:
    - install
    - nvim

- name: Clone Nerd fonts (it may be very long (2gb to clone))
  ansible.builtin.git:
    repo: 'https://github.com/ryanoasis/nerd-fonts.git'
    dest: "/tmp/nerd-font"
  tags:
    - install
    - nvim

- name: Execute the Nerd fonts installer
  become: true
  shell: /tmp/nerd-font/install.sh
  tags:
    - install
    - nvim

- name: Remove the Nerd fonts installer
  file: path=/tmp/nerd-font state=absent
  tags:
    - install
    - nvim

- name: Activate fonts
  shell: "fc-cache -vf ~/.local/share/fonts/"
  tags:
    - install
    - nvim

- name: Installing GoPls for Go autocomplete
  become: true
  snap:
    name: gopls
    classic: yes
  tags:
    - install
    - nvim

